const t=document.getElementById("audioVisualizer"),e=t.getContext("2d");let d,l,r;const w=()=>{t.width=120,t.height=window.innerHeight*1.5,t.style.height="175dvh"};w();window.addEventListener("resize",w);let c=!1,y;const f=()=>{e.clearRect(0,0,t.width,t.height);const a=t.width,h=l.frequencyBinCount,o=t.height/h;l.getByteFrequencyData(r);for(let n=0;n<h;n++){const g=r[n]/255,u=Math.max(2,g*a);if(g>0){const i=o*n+o/2;e.beginPath(),e.moveTo(0,i-o/2.5),e.lineTo(0,i+o/2.5),e.lineTo(u,i),e.closePath();const s=e.createLinearGradient(0,i,u,i);s.addColorStop(0,"rgba(0, 0, 255, 1)"),s.addColorStop(1,"rgba(0, 0, 255, 1)"),e.shadowColor="rgba(0, 0, 255, 0)",e.shadowBlur=5,e.shadowOffsetX=-2,e.fillStyle=s,e.fill(),e.shadowColor="transparent",e.shadowBlur=0,e.shadowOffsetX=0}}c&&(y=requestAnimationFrame(f))};window.addEventListener("audioplayerstatechange",a=>{console.log("Audio player state changed:",a.detail),c=a.detail.isPlaying,a.detail.audioContext&&a.detail.analyser&&(d=a.detail.audioContext,l=a.detail.analyser,r=new Uint8Array(l.frequencyBinCount)),c?(console.log("Starting visualization"),d?.state==="suspended"&&(console.log("Resuming audio context"),d.resume()),f()):(console.log("Stopping visualization"),cancelAnimationFrame(y),e.clearRect(0,0,t.width,t.height))});console.log("AudioVisualizer component initialized");
